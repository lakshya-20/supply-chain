{
  "contractName": "Product",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "ownership",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "manufacturer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isValue",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "rawProducts",
          "type": "string[]"
        }
      ],
      "name": "addProduct",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "name": "getProduct",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "ownership",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "manufacturer",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "rawProducts",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "isValue",
              "type": "bool"
            }
          ],
          "internalType": "struct Product.Product",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "name": "updateOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"rawProducts\",\"type\":\"string[]\"}],\"name\":\"addProduct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getProduct\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownership\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"rawProducts\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"isValue\",\"type\":\"bool\"}],\"internalType\":\"struct Product.Product\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownership\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manufacturer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isValue\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"updateOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/Contracts/Product.sol\":\"Product\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/Contracts/Product.sol\":{\"keccak256\":\"0x02b07250aa212fecdc1bbaf9df72d1a75f5867425da290d65a43918d8c600d51\",\"urls\":[\"bzz-raw://b33b756198a81f4b7c2d6649da4a0b25edacc90a68df7fa8fd7e69a47291a336\",\"dweb:/ipfs/Qmc96qG727nuXgMG2UwKhxoEwSPuM9Ehqy7RpYNtFRCjGS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112fd806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630186a4231461005157806368111cce146100855780638a275f8a146100b5578063f17eaca1146100d1575b600080fd5b61006b60048036036100669190810190610c2b565b6100ed565b60405161007c959493929190611026565b60405180910390f35b61009f600480360361009a9190810190610c6c565b6102b6565b6040516100ac91906110c7565b60405180910390f35b6100cf60048036036100ca9190810190610bd7565b6105e2565b005b6100eb60048036036100e69190810190610cad565b6106f5565b005b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101af5780601f10610184576101008083540402835291602001916101af565b820191906000526020600020905b81548152906001019060200180831161019257829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900460ff16905085565b6102be610849565b6000826040516102ce919061100f565b90815260200160405180910390206040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156105b8578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050815260200190600101906104fc565b5050505081526020016005820160009054906101000a900460ff1615151515815250509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600082604051610609919061100f565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610691576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610688906110a7565b60405180910390fd5b816000826040516106a2919061100f565b908152602001604051809103902060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008084604051610706919061100f565b90815260200160405180910390209050600015158160050160009054906101000a900460ff1615151461076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590611087565b60405180910390fd5b828160010190805190602001906107869291906108ad565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600401908051906020019061082592919061092d565b5060018160050160006101000a81548160ff02191690831515021790555050505050565b6040518060c001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108ee57805160ff191683800117855561091c565b8280016001018555821561091c579182015b8281111561091b578251825591602001919060010190610900565b5b509050610929919061098d565b5090565b82805482825590600052602060002090810192821561097c579160200282015b8281111561097b57825182908051906020019061096b9291906109b2565b509160200191906001019061094d565b5b5090506109899190610a32565b5090565b6109af91905b808211156109ab576000816000905550600101610993565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109f357805160ff1916838001178555610a21565b82800160010185558215610a21579182015b82811115610a20578251825591602001919060010190610a05565b5b509050610a2e919061098d565b5090565b610a5b91905b80821115610a575760008181610a4e9190610a5e565b50600101610a38565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a845750610aa3565b601f016020900490600052602060002090810190610aa2919061098d565b5b50565b600081359050610ab5816112a3565b92915050565b600082601f830112610acc57600080fd5b8135610adf610ada82611116565b6110e9565b9150818183526020840193506020810190508360005b83811015610b255781358601610b0b8882610b2f565b845260208401935060208301925050600181019050610af5565b5050505092915050565b600082601f830112610b4057600080fd5b8135610b53610b4e8261113e565b6110e9565b91508082526020830160208301858383011115610b6f57600080fd5b610b7a838284611250565b50505092915050565b600082601f830112610b9457600080fd5b8135610ba7610ba28261116a565b6110e9565b91508082526020830160208301858383011115610bc357600080fd5b610bce838284611250565b50505092915050565b60008060408385031215610bea57600080fd5b6000610bf885828601610aa6565b925050602083013567ffffffffffffffff811115610c1557600080fd5b610c2185828601610b83565b9150509250929050565b600060208284031215610c3d57600080fd5b600082013567ffffffffffffffff811115610c5757600080fd5b610c6384828501610b2f565b91505092915050565b600060208284031215610c7e57600080fd5b600082013567ffffffffffffffff811115610c9857600080fd5b610ca484828501610b83565b91505092915050565b600080600060608486031215610cc257600080fd5b600084013567ffffffffffffffff811115610cdc57600080fd5b610ce886828701610b83565b935050602084013567ffffffffffffffff811115610d0557600080fd5b610d1186828701610b83565b925050604084013567ffffffffffffffff811115610d2e57600080fd5b610d3a86828701610abb565b9150509250925092565b6000610d508383610e3a565b905092915050565b610d6181611212565b82525050565b610d7081611212565b82525050565b6000610d81826111a6565b610d8b81856111d4565b935083602082028501610d9d85611196565b8060005b85811015610dd95784840389528151610dba8582610d44565b9450610dc5836111c7565b925060208a01995050600181019050610da1565b50829750879550505050505092915050565b610df481611224565b82525050565b610e0381611224565b82525050565b6000610e14826111bc565b610e1e8185611207565b9350610e2e81856020860161125f565b80840191505092915050565b6000610e45826111b1565b610e4f81856111e5565b9350610e5f81856020860161125f565b610e6881611292565b840191505092915050565b6000610e7e826111b1565b610e8881856111f6565b9350610e9881856020860161125f565b610ea181611292565b840191505092915050565b6000610eb96033836111f6565b91507f50726f647563743a3a6164643a2050726f64756374207769746820736572696160008301527f6c206e6f20616c726561647920657869737473000000000000000000000000006020830152604082019050919050565b6000610f1f6038836111f6565b91507f50726f647563743a3a5472616e736665723a204f6e6c79206f776e657220636160008301527f6e207472616e7366657220746865206f776e65727368697000000000000000006020830152604082019050919050565b600060c0830160008301518482036000860152610f958282610e3a565b91505060208301518482036020860152610faf8282610e3a565b9150506040830151610fc46040860182610d58565b506060830151610fd76060860182610d58565b5060808301518482036080860152610fef8282610d76565b91505060a083015161100460a0860182610deb565b508091505092915050565b600061101b8284610e09565b915081905092915050565b600060a08201905081810360008301526110408188610e73565b905081810360208301526110548187610e73565b90506110636040830186610d67565b6110706060830185610d67565b61107d6080830184610dfa565b9695505050505050565b600060208201905081810360008301526110a081610eac565b9050919050565b600060208201905081810360008301526110c081610f12565b9050919050565b600060208201905081810360008301526110e18184610f78565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561110c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561112d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561115557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561118157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061121d82611230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561127d578082015181840152602081019050611262565b8381111561128c576000848401525b50505050565b6000601f19601f8301169050919050565b6112ac81611212565b81146112b757600080fd5b5056fea365627a7a723158200c2b386ae5a83868f95c1297498b9369338dc438a4118f45c461255677ee0dfc6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630186a4231461005157806368111cce146100855780638a275f8a146100b5578063f17eaca1146100d1575b600080fd5b61006b60048036036100669190810190610c2b565b6100ed565b60405161007c959493929190611026565b60405180910390f35b61009f600480360361009a9190810190610c6c565b6102b6565b6040516100ac91906110c7565b60405180910390f35b6100cf60048036036100ca9190810190610bd7565b6105e2565b005b6100eb60048036036100e69190810190610cad565b6106f5565b005b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101af5780601f10610184576101008083540402835291602001916101af565b820191906000526020600020905b81548152906001019060200180831161019257829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561024d5780601f106102225761010080835404028352916020019161024d565b820191906000526020600020905b81548152906001019060200180831161023057829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900460ff16905085565b6102be610849565b6000826040516102ce919061100f565b90815260200160405180910390206040518060c0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103805780601f1061035557610100808354040283529160200191610380565b820191906000526020600020905b81548152906001019060200180831161036357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156105b8578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050815260200190600101906104fc565b5050505081526020016005820160009054906101000a900460ff1615151515815250509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600082604051610609919061100f565b908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610691576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610688906110a7565b60405180910390fd5b816000826040516106a2919061100f565b908152602001604051809103902060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008084604051610706919061100f565b90815260200160405180910390209050600015158160050160009054906101000a900460ff1615151461076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076590611087565b60405180910390fd5b828160010190805190602001906107869291906108ad565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600401908051906020019061082592919061092d565b5060018160050160006101000a81548160ff02191690831515021790555050505050565b6040518060c001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108ee57805160ff191683800117855561091c565b8280016001018555821561091c579182015b8281111561091b578251825591602001919060010190610900565b5b509050610929919061098d565b5090565b82805482825590600052602060002090810192821561097c579160200282015b8281111561097b57825182908051906020019061096b9291906109b2565b509160200191906001019061094d565b5b5090506109899190610a32565b5090565b6109af91905b808211156109ab576000816000905550600101610993565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109f357805160ff1916838001178555610a21565b82800160010185558215610a21579182015b82811115610a20578251825591602001919060010190610a05565b5b509050610a2e919061098d565b5090565b610a5b91905b80821115610a575760008181610a4e9190610a5e565b50600101610a38565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610a845750610aa3565b601f016020900490600052602060002090810190610aa2919061098d565b5b50565b600081359050610ab5816112a3565b92915050565b600082601f830112610acc57600080fd5b8135610adf610ada82611116565b6110e9565b9150818183526020840193506020810190508360005b83811015610b255781358601610b0b8882610b2f565b845260208401935060208301925050600181019050610af5565b5050505092915050565b600082601f830112610b4057600080fd5b8135610b53610b4e8261113e565b6110e9565b91508082526020830160208301858383011115610b6f57600080fd5b610b7a838284611250565b50505092915050565b600082601f830112610b9457600080fd5b8135610ba7610ba28261116a565b6110e9565b91508082526020830160208301858383011115610bc357600080fd5b610bce838284611250565b50505092915050565b60008060408385031215610bea57600080fd5b6000610bf885828601610aa6565b925050602083013567ffffffffffffffff811115610c1557600080fd5b610c2185828601610b83565b9150509250929050565b600060208284031215610c3d57600080fd5b600082013567ffffffffffffffff811115610c5757600080fd5b610c6384828501610b2f565b91505092915050565b600060208284031215610c7e57600080fd5b600082013567ffffffffffffffff811115610c9857600080fd5b610ca484828501610b83565b91505092915050565b600080600060608486031215610cc257600080fd5b600084013567ffffffffffffffff811115610cdc57600080fd5b610ce886828701610b83565b935050602084013567ffffffffffffffff811115610d0557600080fd5b610d1186828701610b83565b925050604084013567ffffffffffffffff811115610d2e57600080fd5b610d3a86828701610abb565b9150509250925092565b6000610d508383610e3a565b905092915050565b610d6181611212565b82525050565b610d7081611212565b82525050565b6000610d81826111a6565b610d8b81856111d4565b935083602082028501610d9d85611196565b8060005b85811015610dd95784840389528151610dba8582610d44565b9450610dc5836111c7565b925060208a01995050600181019050610da1565b50829750879550505050505092915050565b610df481611224565b82525050565b610e0381611224565b82525050565b6000610e14826111bc565b610e1e8185611207565b9350610e2e81856020860161125f565b80840191505092915050565b6000610e45826111b1565b610e4f81856111e5565b9350610e5f81856020860161125f565b610e6881611292565b840191505092915050565b6000610e7e826111b1565b610e8881856111f6565b9350610e9881856020860161125f565b610ea181611292565b840191505092915050565b6000610eb96033836111f6565b91507f50726f647563743a3a6164643a2050726f64756374207769746820736572696160008301527f6c206e6f20616c726561647920657869737473000000000000000000000000006020830152604082019050919050565b6000610f1f6038836111f6565b91507f50726f647563743a3a5472616e736665723a204f6e6c79206f776e657220636160008301527f6e207472616e7366657220746865206f776e65727368697000000000000000006020830152604082019050919050565b600060c0830160008301518482036000860152610f958282610e3a565b91505060208301518482036020860152610faf8282610e3a565b9150506040830151610fc46040860182610d58565b506060830151610fd76060860182610d58565b5060808301518482036080860152610fef8282610d76565b91505060a083015161100460a0860182610deb565b508091505092915050565b600061101b8284610e09565b915081905092915050565b600060a08201905081810360008301526110408188610e73565b905081810360208301526110548187610e73565b90506110636040830186610d67565b6110706060830185610d67565b61107d6080830184610dfa565b9695505050505050565b600060208201905081810360008301526110a081610eac565b9050919050565b600060208201905081810360008301526110c081610f12565b9050919050565b600060208201905081810360008301526110e18184610f78565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561110c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561112d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561115557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561118157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061121d82611230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561127d578082015181840152602081019050611262565b8381111561128c576000848401525b50505050565b6000601f19601f8301169050919050565b6112ac81611212565b81146112b757600080fd5b5056fea365627a7a723158200c2b386ae5a83868f95c1297498b9369338dc438a4118f45c461255677ee0dfc6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "69:1260:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:1260:3;;;;;;;",
  "deployedSourceMap": "69:1260:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:1260:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;912:114;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1066:258;;;;;;;;;;;;;;;;:::i;:::-;;395:484;;;;;;;;;;;;;;;;:::i;:::-;;321:42;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;321:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;912:114::-;972:14;;:::io;1066:258::-;1202:10;1178:34;;:8;1187:2;1178:12;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:34;;;1170:102;;;;;;;;;;;;;;;;;;;;;;1308:8;1283;1292:2;1283:12;;;;;;;;;;;;;;;;;;;;:22;;;:33;;;;;;;;;;;;;;;;;;1066:258;;:::o;395:484::-;534:23;560:8;569:2;560:12;;;;;;;;;;;;;;;;;;;;534:38;;610:5;591:24;;:7;:15;;;;;;;;;;;;:24;;;583:88;;;;;;;;;;;;;;;;;;;;;;697:4;682:7;:12;;:19;;;;;;;;;;;;:::i;:::-;;732:10;712:7;:17;;;:30;;;;;;;;;;;;;;;;;;776:10;753:7;:20;;;:33;;;;;;;;;;;;;;;;;;819:11;797:7;:19;;:33;;;;;;;;;;;;:::i;:::-;;859:4;841:7;:15;;;:22;;;;;;;;;;;;;;;;;;395:484;;;;:::o;69:1260::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;159:696;;282:3;275:4;267:6;263:17;259:27;249:2;;300:1;297;290:12;249:2;337:6;324:20;359:86;374:70;437:6;374:70;;;359:86;;;350:95;;462:5;487:6;480:5;473:21;517:4;509:6;505:17;495:27;;539:4;534:3;530:14;523:21;;592:6;625:1;610:239;635:6;632:1;629:13;610:239;;;718:3;705:17;697:6;693:30;742:43;781:3;769:10;742:43;;;737:3;730:56;809:4;804:3;800:14;793:21;;837:4;832:3;828:14;821:21;;667:182;657:1;654;650:9;645:14;;610:239;;;614:14;242:613;;;;;;;;864:434;;962:3;955:4;947:6;943:17;939:27;929:2;;980:1;977;970:12;929:2;1017:6;1004:20;1039:61;1054:45;1092:6;1054:45;;;1039:61;;;1030:70;;1120:6;1113:5;1106:21;1156:4;1148:6;1144:17;1189:4;1182:5;1178:16;1224:3;1215:6;1210:3;1206:16;1203:25;1200:2;;;1241:1;1238;1231:12;1200:2;1251:41;1285:6;1280:3;1275;1251:41;;;922:376;;;;;;;;1307:442;;1409:3;1402:4;1394:6;1390:17;1386:27;1376:2;;1427:1;1424;1417:12;1376:2;1464:6;1451:20;1486:65;1501:49;1543:6;1501:49;;;1486:65;;;1477:74;;1571:6;1564:5;1557:21;1607:4;1599:6;1595:17;1640:4;1633:5;1629:16;1675:3;1666:6;1661:3;1657:16;1654:25;1651:2;;;1692:1;1689;1682:12;1651:2;1702:41;1736:6;1731:3;1726;1702:41;;;1369:380;;;;;;;;1757:472;;;1888:2;1876:9;1867:7;1863:23;1859:32;1856:2;;;1904:1;1901;1894:12;1856:2;1939:1;1956:53;2001:7;1992:6;1981:9;1977:22;1956:53;;;1946:63;;1918:97;2074:2;2063:9;2059:18;2046:32;2098:18;2090:6;2087:30;2084:2;;;2130:1;2127;2120:12;2084:2;2150:63;2205:7;2196:6;2185:9;2181:22;2150:63;;;2140:73;;2025:194;1850:379;;;;;;2236:339;;2346:2;2334:9;2325:7;2321:23;2317:32;2314:2;;;2362:1;2359;2352:12;2314:2;2425:1;2414:9;2410:17;2397:31;2448:18;2440:6;2437:30;2434:2;;;2480:1;2477;2470:12;2434:2;2500:59;2551:7;2542:6;2531:9;2527:22;2500:59;;;2490:69;;2376:189;2308:267;;;;;2582:347;;2696:2;2684:9;2675:7;2671:23;2667:32;2664:2;;;2712:1;2709;2702:12;2664:2;2775:1;2764:9;2760:17;2747:31;2798:18;2790:6;2787:30;2784:2;;;2830:1;2827;2820:12;2784:2;2850:63;2905:7;2896:6;2885:9;2881:22;2850:63;;;2840:73;;2726:193;2658:271;;;;;2936:851;;;;3125:2;3113:9;3104:7;3100:23;3096:32;3093:2;;;3141:1;3138;3131:12;3093:2;3204:1;3193:9;3189:17;3176:31;3227:18;3219:6;3216:30;3213:2;;;3259:1;3256;3249:12;3213:2;3279:63;3334:7;3325:6;3314:9;3310:22;3279:63;;;3269:73;;3155:193;3407:2;3396:9;3392:18;3379:32;3431:18;3423:6;3420:30;3417:2;;;3463:1;3460;3453:12;3417:2;3483:63;3538:7;3529:6;3518:9;3514:22;3483:63;;;3473:73;;3358:194;3611:2;3600:9;3596:18;3583:32;3635:18;3627:6;3624:30;3621:2;;;3667:1;3664;3657:12;3621:2;3687:84;3763:7;3754:6;3743:9;3739:22;3687:84;;;3677:94;;3562:215;3087:700;;;;;;3795:181;;3908:62;3966:3;3958:6;3908:62;;;3894:76;;3887:89;;;;;3984:103;4057:24;4075:5;4057:24;;;4052:3;4045:37;4039:48;;;4094:113;4177:24;4195:5;4177:24;;;4172:3;4165:37;4159:48;;;4243:860;;4386:56;4436:5;4386:56;;;4455:82;4530:6;4525:3;4455:82;;;4448:89;;4560:3;4602:4;4594:6;4590:17;4585:3;4581:27;4629:58;4681:5;4629:58;;;4707:7;4735:1;4720:344;4745:6;4742:1;4739:13;4720:344;;;4807:9;4801:4;4797:20;4792:3;4785:33;4852:6;4846:13;4874:76;4945:4;4930:13;4874:76;;;4866:84;;4967:62;5022:6;4967:62;;;4957:72;;5052:4;5047:3;5043:14;5036:21;;4777:287;4767:1;4764;4760:9;4755:14;;4720:344;;;4724:14;5077:4;5070:11;;5094:3;5087:10;;4365:738;;;;;;;;;;5111:94;5178:21;5193:5;5178:21;;;5173:3;5166:34;5160:45;;;5212:104;5289:21;5304:5;5289:21;;;5284:3;5277:34;5271:45;;;5323:360;;5453:39;5486:5;5453:39;;;5504:89;5586:6;5581:3;5504:89;;;5497:96;;5598:52;5643:6;5638:3;5631:4;5624:5;5620:16;5598:52;;;5671:6;5666:3;5662:16;5655:23;;5433:250;;;;;;5690:319;;5788:35;5817:5;5788:35;;;5835:61;5889:6;5884:3;5835:61;;;5828:68;;5901:52;5946:6;5941:3;5934:4;5927:5;5923:16;5901:52;;;5974:29;5996:6;5974:29;;;5969:3;5965:39;5958:46;;5768:241;;;;;;6016:339;;6124:35;6153:5;6124:35;;;6171:71;6235:6;6230:3;6171:71;;;6164:78;;6247:52;6292:6;6287:3;6280:4;6273:5;6269:16;6247:52;;;6320:29;6342:6;6320:29;;;6315:3;6311:39;6304:46;;6104:251;;;;;;6363:388;;6523:67;6587:2;6582:3;6523:67;;;6516:74;;6623:34;6619:1;6614:3;6610:11;6603:55;6692:21;6687:2;6682:3;6678:12;6671:43;6742:2;6737:3;6733:12;6726:19;;6509:242;;;;6760:393;;6920:67;6984:2;6979:3;6920:67;;;6913:74;;7020:34;7016:1;7011:3;7007:11;7000:55;7089:26;7084:2;7079:3;7075:12;7068:48;7144:2;7139:3;7135:12;7128:19;;6906:247;;;;7216:1382;;7365:4;7360:3;7356:14;7446:4;7439:5;7435:16;7429:23;7498:3;7492:4;7488:14;7481:4;7476:3;7472:14;7465:38;7518:69;7582:4;7568:12;7518:69;;;7510:77;;7385:214;7672:4;7665:5;7661:16;7655:23;7724:3;7718:4;7714:14;7707:4;7702:3;7698:14;7691:38;7744:69;7808:4;7794:12;7744:69;;;7736:77;;7609:216;7903:4;7896:5;7892:16;7886:23;7915:63;7972:4;7967:3;7963:14;7949:12;7915:63;;;7835:149;8065:4;8058:5;8054:16;8048:23;8077:63;8134:4;8129:3;8125:14;8111:12;8077:63;;;7994:152;8226:4;8219:5;8215:16;8209:23;8278:3;8272:4;8268:14;8261:4;8256:3;8252:14;8245:38;8298:111;8404:4;8390:12;8298:111;;;8290:119;;8156:265;8497:4;8490:5;8486:16;8480:23;8509:57;8560:4;8555:3;8551:14;8537:12;8509:57;;;8431:141;8589:4;8582:11;;7338:1260;;;;;;8605:266;;8751:95;8842:3;8833:6;8751:95;;;8744:102;;8863:3;8856:10;;8732:139;;;;;8878:807;;9134:3;9123:9;9119:19;9111:27;;9185:9;9179:4;9175:20;9171:1;9160:9;9156:17;9149:47;9210:74;9279:4;9270:6;9210:74;;;9202:82;;9332:9;9326:4;9322:20;9317:2;9306:9;9302:18;9295:48;9357:74;9426:4;9417:6;9357:74;;;9349:82;;9442:72;9510:2;9499:9;9495:18;9486:6;9442:72;;;9525;9593:2;9582:9;9578:18;9569:6;9525:72;;;9608:67;9670:3;9659:9;9655:19;9646:6;9608:67;;;9105:580;;;;;;;;;9692:407;;9883:2;9872:9;9868:18;9860:26;;9933:9;9927:4;9923:20;9919:1;9908:9;9904:17;9897:47;9958:131;10084:4;9958:131;;;9950:139;;9854:245;;;;10106:407;;10297:2;10286:9;10282:18;10274:26;;10347:9;10341:4;10337:20;10333:1;10322:9;10318:17;10311:47;10372:131;10498:4;10372:131;;;10364:139;;10268:245;;;;10520:357;;10686:2;10675:9;10671:18;10663:26;;10736:9;10730:4;10726:20;10722:1;10711:9;10707:17;10700:47;10761:106;10862:4;10853:6;10761:106;;;10753:114;;10657:220;;;;;10884:256;;10946:2;10940:9;10930:19;;10984:4;10976:6;10972:17;11083:6;11071:10;11068:22;11047:18;11035:10;11032:34;11029:62;11026:2;;;11104:1;11101;11094:12;11026:2;11124:10;11120:2;11113:22;10924:216;;;;;11147:310;;11312:18;11304:6;11301:30;11298:2;;;11344:1;11341;11334:12;11298:2;11379:4;11371:6;11367:17;11359:25;;11442:4;11436;11432:15;11424:23;;11235:222;;;;11464:318;;11604:18;11596:6;11593:30;11590:2;;;11636:1;11633;11626:12;11590:2;11703:4;11699:9;11692:4;11684:6;11680:17;11676:33;11668:41;;11767:4;11761;11757:15;11749:23;;11527:255;;;;11789:322;;11933:18;11925:6;11922:30;11919:2;;;11965:1;11962;11955:12;11919:2;12032:4;12028:9;12021:4;12013:6;12009:17;12005:33;11997:41;;12096:4;12090;12086:15;12078:23;;11856:255;;;;12118:153;;12206:3;12198:11;;12244:4;12239:3;12235:14;12227:22;;12192:79;;;;12278:139;;12389:5;12383:12;12373:22;;12354:63;;;;12424:118;;12514:5;12508:12;12498:22;;12479:63;;;;12549:122;;12643:5;12637:12;12627:22;;12608:63;;;;12678:110;;12778:4;12773:3;12769:14;12761:22;;12755:33;;;;12796:174;;12922:6;12917:3;12910:19;12959:4;12954:3;12950:14;12935:29;;12903:67;;;;;12979:153;;13084:6;13079:3;13072:19;13121:4;13116:3;13112:14;13097:29;;13065:67;;;;;13141:163;;13256:6;13251:3;13244:19;13293:4;13288:3;13284:14;13269:29;;13237:67;;;;;13313:145;;13449:3;13434:18;;13427:31;;;;;13466:91;;13528:24;13546:5;13528:24;;;13517:35;;13511:46;;;;13564:85;;13637:5;13630:13;13623:21;13612:32;;13606:43;;;;13656:121;;13729:42;13722:5;13718:54;13707:65;;13701:76;;;;13785:145;13866:6;13861:3;13856;13843:30;13922:1;13913:6;13908:3;13904:16;13897:27;13836:94;;;;13939:268;14004:1;14011:101;14025:6;14022:1;14019:13;14011:101;;;14101:1;14096:3;14092:11;14086:18;14082:1;14077:3;14073:11;14066:39;14047:2;14044:1;14040:10;14035:15;;14011:101;;;14127:6;14124:1;14121:13;14118:2;;;14192:1;14183:6;14178:3;14174:16;14167:27;14118:2;13988:219;;;;;14215:97;;14303:2;14299:7;14294:2;14287:5;14283:14;14279:28;14269:38;;14263:49;;;;14320:117;14389:24;14407:5;14389:24;;;14382:5;14379:35;14369:2;;14428:1;14425;14418:12;14369:2;14363:74;",
  "source": "pragma solidity >=0.4.22 <0.9.0;\r\npragma experimental ABIEncoderV2;\r\ncontract Product {\r\n    struct Product{\r\n        string id;\r\n        string name;\r\n        address ownership;\r\n        address manufacturer;\r\n        string[] rawProducts;  \r\n        bool isValue; //to verify value exists in mapping or not\r\n    }\r\n    mapping(string => Product) public products;\r\n\r\n    //add new product\r\n    function addProduct(\r\n        string memory id,\r\n        string memory name,\r\n        string[] memory rawProducts\r\n    ) public {\r\n        Product storage product = products[id];\r\n        require(product.isValue == false, \"Product::add: Product with serial no already exists\");\r\n        product.name = name;\r\n        product.ownership = msg.sender;\r\n        product.manufacturer = msg.sender;\r\n        product.rawProducts = rawProducts;\r\n        product.isValue = true;        \r\n    }\r\n\r\n    //get product by id\r\n    function getProduct (string memory id) public view returns (Product memory) {\r\n        return products[id];\r\n    }\r\n\r\n    //update product ownership\r\n    function updateOwnership(\r\n        address newOwner,\r\n        string memory id\r\n    ) public {\r\n        require(products[id].ownership==msg.sender,\"Product::Transfer: Only owner can transfer the ownership\");\r\n        products[id].ownership = newOwner;\r\n    }\r\n\r\n}",
  "sourcePath": "D:\\Blockchain\\supply-chain\\src\\Contracts\\Product.sol",
  "ast": {
    "absolutePath": "project:/src/Contracts/Product.sol",
    "exportedSymbols": {
      "Product": [
        541
      ]
    },
    "id": 542,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 426,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 427,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 541,
        "linearizedBaseContracts": [
          541
        ],
        "name": "Product",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Product.Product",
            "id": 441,
            "members": [
              {
                "constant": false,
                "id": 429,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "118:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 428,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "118:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 431,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "138:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 430,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "138:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "name": "ownership",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "160:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 435,
                "name": "manufacturer",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "188:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 434,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "188:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 438,
                "name": "rawProducts",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "219:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 436,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 437,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "219:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 440,
                "name": "isValue",
                "nodeType": "VariableDeclaration",
                "scope": 441,
                "src": "252:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 439,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Product",
            "nodeType": "StructDefinition",
            "scope": 541,
            "src": "93:222:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 445,
            "name": "products",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "321:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
              "typeString": "mapping(string => struct Product.Product)"
            },
            "typeName": {
              "id": 444,
              "keyType": {
                "id": 442,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "329:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "321:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
                "typeString": "mapping(string => struct Product.Product)"
              },
              "valueType": {
                "contractScope": null,
                "id": 443,
                "name": "Product",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 441,
                "src": "339:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                  "typeString": "struct Product.Product"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "523:356:3",
              "statements": [
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "name": "product",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "534:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                        "typeString": "struct Product.Product"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 455,
                        "name": "Product",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 441,
                        "src": "534:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 457,
                      "name": "products",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "560:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
                        "typeString": "mapping(string memory => struct Product.Product storage ref)"
                      }
                    },
                    "id": 459,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "569:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "560:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$441_storage",
                      "typeString": "struct Product.Product storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "534:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "product",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "591:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                              "typeString": "struct Product.Product storage pointer"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 440,
                          "src": "591:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "610:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "591:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f647563743a3a6164643a2050726f6475637420776974682073657269616c206e6f20616c726561647920657869737473",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:53:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3032b5e15067c3cb5a00f355f848e12ccefd3b5af8c6694b6b361411096612",
                          "typeString": "literal_string \"Product::add: Product with serial no already exists\""
                        },
                        "value": "Product::add: Product with serial no already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3032b5e15067c3cb5a00f355f848e12ccefd3b5af8c6694b6b361411096612",
                          "typeString": "literal_string \"Product::add: Product with serial no already exists\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        620,
                        621
                      ],
                      "referencedDeclaration": 621,
                      "src": "583:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "583:88:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "583:88:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 469,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "682:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product storage pointer"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 431,
                      "src": "682:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "697:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "682:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "682:19:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "712:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product storage pointer"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ownership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "712:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "732:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "732:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "712:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "712:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "753:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product storage pointer"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "manufacturer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "753:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "776:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "776:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "753:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "753:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 489,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "797:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product storage pointer"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rawProducts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 438,
                      "src": "797:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "rawProducts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "819:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "797:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "797:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 495,
                        "name": "product",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "841:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                          "typeString": "struct Product.Product storage pointer"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 440,
                      "src": "841:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "841:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "841:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "425:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "452:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "name": "rawProducts",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "481:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 450,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "481:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 451,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "481:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:101:3"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:3"
            },
            "scope": 541,
            "src": "395:484:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "988:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 509,
                      "name": "products",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "1006:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
                        "typeString": "mapping(string memory => struct Product.Product storage ref)"
                      }
                    },
                    "id": 511,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 510,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "1015:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1006:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$441_storage",
                      "typeString": "struct Product.Product storage ref"
                    }
                  },
                  "functionReturnParameters": 508,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "999:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "933:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "932:18:3"
            },
            "returnParameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "972:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Product_$441_memory_ptr",
                    "typeString": "struct Product.Product"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 506,
                    "name": "Product",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 441,
                    "src": "972:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Product_$441_storage_ptr",
                      "typeString": "struct Product.Product"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "971:16:3"
            },
            "scope": 541,
            "src": "912:114:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "1159:165:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 522,
                              "name": "products",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "1178:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
                                "typeString": "mapping(string memory => struct Product.Product storage ref)"
                              }
                            },
                            "id": 524,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 523,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "1187:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1178:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Product_$441_storage",
                              "typeString": "struct Product.Product storage ref"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownership",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 433,
                          "src": "1178:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "1202:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1202:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1178:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f647563743a3a5472616e736665723a204f6e6c79206f776e65722063616e207472616e7366657220746865206f776e657273686970",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:58:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a1dcaebcac053576049f7f35c4083da4a7b600a279b98d8035b1d6c7ab3da4a",
                          "typeString": "literal_string \"Product::Transfer: Only owner can transfer the ownership\""
                        },
                        "value": "Product::Transfer: Only owner can transfer the ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a1dcaebcac053576049f7f35c4083da4a7b600a279b98d8035b1d6c7ab3da4a",
                          "typeString": "literal_string \"Product::Transfer: Only owner can transfer the ownership\""
                        }
                      ],
                      "id": 521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        620,
                        621
                      ],
                      "referencedDeclaration": 621,
                      "src": "1170:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:102:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 532,
                          "name": "products",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "1283:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Product_$441_storage_$",
                            "typeString": "mapping(string memory => struct Product.Product storage ref)"
                          }
                        },
                        "id": 534,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 533,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "1292:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1283:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Product_$441_storage",
                          "typeString": "struct Product.Product storage ref"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ownership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "1283:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 536,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "1308:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1283:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:33:3"
                }
              ]
            },
            "documentation": null,
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "1101:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "1128:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1090:61:3"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:0:3"
            },
            "scope": 541,
            "src": "1066:258:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 542,
        "src": "69:1260:3"
      }
    ],
    "src": "0:1329:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/Contracts/Product.sol",
      "exportedSymbols": {
        "Product": [
          541
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 426,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 427,
        "name": "PragmaDirective",
        "src": "34:33:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            541
          ],
          "name": "Product",
          "scope": 542
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "Product.Product",
              "name": "Product",
              "scope": 541,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "id",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 428,
                    "name": "ElementaryTypeName",
                    "src": "118:6:3"
                  }
                ],
                "id": 429,
                "name": "VariableDeclaration",
                "src": "118:9:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 430,
                    "name": "ElementaryTypeName",
                    "src": "138:6:3"
                  }
                ],
                "id": 431,
                "name": "VariableDeclaration",
                "src": "138:11:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "ownership",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 432,
                    "name": "ElementaryTypeName",
                    "src": "160:7:3"
                  }
                ],
                "id": 433,
                "name": "VariableDeclaration",
                "src": "160:17:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "manufacturer",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 434,
                    "name": "ElementaryTypeName",
                    "src": "188:7:3"
                  }
                ],
                "id": 435,
                "name": "VariableDeclaration",
                "src": "188:20:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "rawProducts",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string[]",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "length": null,
                      "type": "string[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 436,
                        "name": "ElementaryTypeName",
                        "src": "219:6:3"
                      }
                    ],
                    "id": 437,
                    "name": "ArrayTypeName",
                    "src": "219:8:3"
                  }
                ],
                "id": 438,
                "name": "VariableDeclaration",
                "src": "219:20:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "isValue",
                  "scope": 441,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 439,
                    "name": "ElementaryTypeName",
                    "src": "252:4:3"
                  }
                ],
                "id": 440,
                "name": "VariableDeclaration",
                "src": "252:12:3"
              }
            ],
            "id": 441,
            "name": "StructDefinition",
            "src": "93:222:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "products",
              "scope": 541,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct Product.Product)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct Product.Product)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 442,
                    "name": "ElementaryTypeName",
                    "src": "329:6:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Product",
                      "referencedDeclaration": 441,
                      "type": "struct Product.Product"
                    },
                    "id": 443,
                    "name": "UserDefinedTypeName",
                    "src": "339:7:3"
                  }
                ],
                "id": 444,
                "name": "Mapping",
                "src": "321:26:3"
              }
            ],
            "id": 445,
            "name": "VariableDeclaration",
            "src": "321:42:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addProduct",
              "scope": 541,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "id",
                      "scope": 502,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 446,
                        "name": "ElementaryTypeName",
                        "src": "425:6:3"
                      }
                    ],
                    "id": 447,
                    "name": "VariableDeclaration",
                    "src": "425:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 502,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 448,
                        "name": "ElementaryTypeName",
                        "src": "452:6:3"
                      }
                    ],
                    "id": 449,
                    "name": "VariableDeclaration",
                    "src": "452:18:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "rawProducts",
                      "scope": 502,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "string[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 450,
                            "name": "ElementaryTypeName",
                            "src": "481:6:3"
                          }
                        ],
                        "id": 451,
                        "name": "ArrayTypeName",
                        "src": "481:8:3"
                      }
                    ],
                    "id": 452,
                    "name": "VariableDeclaration",
                    "src": "481:27:3"
                  }
                ],
                "id": 453,
                "name": "ParameterList",
                "src": "414:101:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 454,
                "name": "ParameterList",
                "src": "523:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        456
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "product",
                          "scope": 501,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Product.Product",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Product",
                              "referencedDeclaration": 441,
                              "type": "struct Product.Product"
                            },
                            "id": 455,
                            "name": "UserDefinedTypeName",
                            "src": "534:7:3"
                          }
                        ],
                        "id": 456,
                        "name": "VariableDeclaration",
                        "src": "534:23:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Product.Product storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 445,
                              "type": "mapping(string memory => struct Product.Product storage ref)",
                              "value": "products"
                            },
                            "id": 457,
                            "name": "Identifier",
                            "src": "560:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 447,
                              "type": "string memory",
                              "value": "id"
                            },
                            "id": 458,
                            "name": "Identifier",
                            "src": "569:2:3"
                          }
                        ],
                        "id": 459,
                        "name": "IndexAccess",
                        "src": "560:12:3"
                      }
                    ],
                    "id": 460,
                    "name": "VariableDeclarationStatement",
                    "src": "534:38:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6f3032b5e15067c3cb5a00f355f848e12ccefd3b5af8c6694b6b361411096612",
                                  "typeString": "literal_string \"Product::add: Product with serial no already exists\""
                                }
                              ],
                              "overloadedDeclarations": [
                                620,
                                621
                              ],
                              "referencedDeclaration": 621,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 461,
                            "name": "Identifier",
                            "src": "583:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isValue",
                                  "referencedDeclaration": 440,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 456,
                                      "type": "struct Product.Product storage pointer",
                                      "value": "product"
                                    },
                                    "id": 462,
                                    "name": "Identifier",
                                    "src": "591:7:3"
                                  }
                                ],
                                "id": 463,
                                "name": "MemberAccess",
                                "src": "591:15:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 464,
                                "name": "Literal",
                                "src": "610:5:3"
                              }
                            ],
                            "id": 465,
                            "name": "BinaryOperation",
                            "src": "591:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f647563743a3a6164643a2050726f6475637420776974682073657269616c206e6f20616c726561647920657869737473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Product::add: Product with serial no already exists\"",
                              "value": "Product::add: Product with serial no already exists"
                            },
                            "id": 466,
                            "name": "Literal",
                            "src": "617:53:3"
                          }
                        ],
                        "id": 467,
                        "name": "FunctionCall",
                        "src": "583:88:3"
                      }
                    ],
                    "id": 468,
                    "name": "ExpressionStatement",
                    "src": "583:88:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "name",
                              "referencedDeclaration": 431,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "struct Product.Product storage pointer",
                                  "value": "product"
                                },
                                "id": 469,
                                "name": "Identifier",
                                "src": "682:7:3"
                              }
                            ],
                            "id": 471,
                            "name": "MemberAccess",
                            "src": "682:12:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 449,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 472,
                            "name": "Identifier",
                            "src": "697:4:3"
                          }
                        ],
                        "id": 473,
                        "name": "Assignment",
                        "src": "682:19:3"
                      }
                    ],
                    "id": 474,
                    "name": "ExpressionStatement",
                    "src": "682:19:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "ownership",
                              "referencedDeclaration": 433,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "struct Product.Product storage pointer",
                                  "value": "product"
                                },
                                "id": 475,
                                "name": "Identifier",
                                "src": "712:7:3"
                              }
                            ],
                            "id": 477,
                            "name": "MemberAccess",
                            "src": "712:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 617,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 478,
                                "name": "Identifier",
                                "src": "732:3:3"
                              }
                            ],
                            "id": 479,
                            "name": "MemberAccess",
                            "src": "732:10:3"
                          }
                        ],
                        "id": 480,
                        "name": "Assignment",
                        "src": "712:30:3"
                      }
                    ],
                    "id": 481,
                    "name": "ExpressionStatement",
                    "src": "712:30:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "manufacturer",
                              "referencedDeclaration": 435,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "struct Product.Product storage pointer",
                                  "value": "product"
                                },
                                "id": 482,
                                "name": "Identifier",
                                "src": "753:7:3"
                              }
                            ],
                            "id": 484,
                            "name": "MemberAccess",
                            "src": "753:20:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 617,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 485,
                                "name": "Identifier",
                                "src": "776:3:3"
                              }
                            ],
                            "id": 486,
                            "name": "MemberAccess",
                            "src": "776:10:3"
                          }
                        ],
                        "id": 487,
                        "name": "Assignment",
                        "src": "753:33:3"
                      }
                    ],
                    "id": 488,
                    "name": "ExpressionStatement",
                    "src": "753:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "rawProducts",
                              "referencedDeclaration": 438,
                              "type": "string storage ref[] storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "struct Product.Product storage pointer",
                                  "value": "product"
                                },
                                "id": 489,
                                "name": "Identifier",
                                "src": "797:7:3"
                              }
                            ],
                            "id": 491,
                            "name": "MemberAccess",
                            "src": "797:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 452,
                              "type": "string memory[] memory",
                              "value": "rawProducts"
                            },
                            "id": 492,
                            "name": "Identifier",
                            "src": "819:11:3"
                          }
                        ],
                        "id": 493,
                        "name": "Assignment",
                        "src": "797:33:3"
                      }
                    ],
                    "id": 494,
                    "name": "ExpressionStatement",
                    "src": "797:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "isValue",
                              "referencedDeclaration": 440,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 456,
                                  "type": "struct Product.Product storage pointer",
                                  "value": "product"
                                },
                                "id": 495,
                                "name": "Identifier",
                                "src": "841:7:3"
                              }
                            ],
                            "id": 497,
                            "name": "MemberAccess",
                            "src": "841:15:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 498,
                            "name": "Literal",
                            "src": "859:4:3"
                          }
                        ],
                        "id": 499,
                        "name": "Assignment",
                        "src": "841:22:3"
                      }
                    ],
                    "id": 500,
                    "name": "ExpressionStatement",
                    "src": "841:22:3"
                  }
                ],
                "id": 501,
                "name": "Block",
                "src": "523:356:3"
              }
            ],
            "id": 502,
            "name": "FunctionDefinition",
            "src": "395:484:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getProduct",
              "scope": 541,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "id",
                      "scope": 514,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 503,
                        "name": "ElementaryTypeName",
                        "src": "933:6:3"
                      }
                    ],
                    "id": 504,
                    "name": "VariableDeclaration",
                    "src": "933:16:3"
                  }
                ],
                "id": 505,
                "name": "ParameterList",
                "src": "932:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 514,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Product.Product",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Product",
                          "referencedDeclaration": 441,
                          "type": "struct Product.Product"
                        },
                        "id": 506,
                        "name": "UserDefinedTypeName",
                        "src": "972:7:3"
                      }
                    ],
                    "id": 507,
                    "name": "VariableDeclaration",
                    "src": "972:14:3"
                  }
                ],
                "id": 508,
                "name": "ParameterList",
                "src": "971:16:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 508
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Product.Product storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 445,
                              "type": "mapping(string memory => struct Product.Product storage ref)",
                              "value": "products"
                            },
                            "id": 509,
                            "name": "Identifier",
                            "src": "1006:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 504,
                              "type": "string memory",
                              "value": "id"
                            },
                            "id": 510,
                            "name": "Identifier",
                            "src": "1015:2:3"
                          }
                        ],
                        "id": 511,
                        "name": "IndexAccess",
                        "src": "1006:12:3"
                      }
                    ],
                    "id": 512,
                    "name": "Return",
                    "src": "999:19:3"
                  }
                ],
                "id": 513,
                "name": "Block",
                "src": "988:38:3"
              }
            ],
            "id": 514,
            "name": "FunctionDefinition",
            "src": "912:114:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateOwnership",
              "scope": 541,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newOwner",
                      "scope": 540,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 515,
                        "name": "ElementaryTypeName",
                        "src": "1101:7:3"
                      }
                    ],
                    "id": 516,
                    "name": "VariableDeclaration",
                    "src": "1101:16:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "id",
                      "scope": 540,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 517,
                        "name": "ElementaryTypeName",
                        "src": "1128:6:3"
                      }
                    ],
                    "id": 518,
                    "name": "VariableDeclaration",
                    "src": "1128:16:3"
                  }
                ],
                "id": 519,
                "name": "ParameterList",
                "src": "1090:61:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 520,
                "name": "ParameterList",
                "src": "1159:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8a1dcaebcac053576049f7f35c4083da4a7b600a279b98d8035b1d6c7ab3da4a",
                                  "typeString": "literal_string \"Product::Transfer: Only owner can transfer the ownership\""
                                }
                              ],
                              "overloadedDeclarations": [
                                620,
                                621
                              ],
                              "referencedDeclaration": 621,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 521,
                            "name": "Identifier",
                            "src": "1170:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "ownership",
                                  "referencedDeclaration": 433,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Product.Product storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 445,
                                          "type": "mapping(string memory => struct Product.Product storage ref)",
                                          "value": "products"
                                        },
                                        "id": 522,
                                        "name": "Identifier",
                                        "src": "1178:8:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 518,
                                          "type": "string memory",
                                          "value": "id"
                                        },
                                        "id": 523,
                                        "name": "Identifier",
                                        "src": "1187:2:3"
                                      }
                                    ],
                                    "id": 524,
                                    "name": "IndexAccess",
                                    "src": "1178:12:3"
                                  }
                                ],
                                "id": 525,
                                "name": "MemberAccess",
                                "src": "1178:22:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 617,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 526,
                                    "name": "Identifier",
                                    "src": "1202:3:3"
                                  }
                                ],
                                "id": 527,
                                "name": "MemberAccess",
                                "src": "1202:10:3"
                              }
                            ],
                            "id": 528,
                            "name": "BinaryOperation",
                            "src": "1178:34:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f647563743a3a5472616e736665723a204f6e6c79206f776e65722063616e207472616e7366657220746865206f776e657273686970",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Product::Transfer: Only owner can transfer the ownership\"",
                              "value": "Product::Transfer: Only owner can transfer the ownership"
                            },
                            "id": 529,
                            "name": "Literal",
                            "src": "1213:58:3"
                          }
                        ],
                        "id": 530,
                        "name": "FunctionCall",
                        "src": "1170:102:3"
                      }
                    ],
                    "id": 531,
                    "name": "ExpressionStatement",
                    "src": "1170:102:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "ownership",
                              "referencedDeclaration": 433,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Product.Product storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 445,
                                      "type": "mapping(string memory => struct Product.Product storage ref)",
                                      "value": "products"
                                    },
                                    "id": 532,
                                    "name": "Identifier",
                                    "src": "1283:8:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 518,
                                      "type": "string memory",
                                      "value": "id"
                                    },
                                    "id": 533,
                                    "name": "Identifier",
                                    "src": "1292:2:3"
                                  }
                                ],
                                "id": 534,
                                "name": "IndexAccess",
                                "src": "1283:12:3"
                              }
                            ],
                            "id": 535,
                            "name": "MemberAccess",
                            "src": "1283:22:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 516,
                              "type": "address",
                              "value": "newOwner"
                            },
                            "id": 536,
                            "name": "Identifier",
                            "src": "1308:8:3"
                          }
                        ],
                        "id": 537,
                        "name": "Assignment",
                        "src": "1283:33:3"
                      }
                    ],
                    "id": 538,
                    "name": "ExpressionStatement",
                    "src": "1283:33:3"
                  }
                ],
                "id": 539,
                "name": "Block",
                "src": "1159:165:3"
              }
            ],
            "id": 540,
            "name": "FunctionDefinition",
            "src": "1066:258:3"
          }
        ],
        "id": 541,
        "name": "ContractDefinition",
        "src": "69:1260:3"
      }
    ],
    "id": 542,
    "name": "SourceUnit",
    "src": "0:1329:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xDa60492b8645B058B60E8261BE6F4781F247Aa06",
      "transactionHash": "0xb7a351977e8b3cc39d5c840dcba6e03dd929cbdc07c784c45f52d46023a0d8f6"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-22T08:29:57.214Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}